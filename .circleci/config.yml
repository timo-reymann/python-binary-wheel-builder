version: "2.1"

orbs:
  win: circleci/windows@5.1.1
  python: circleci/python@3.3.0
  codecov: codecov/codecov@5.4.3
  semantic-release: trustedshops-public/semantic-release@6.0.0
  github-utils: trustedshops-public/github-utils@1.1.3

executors:
  node:
    docker:
      - image: cimg/python:3.10-node
  python-linux:
    docker:
      - image: cimg/python:3.12
  macos:
    macos:
      xcode: "16.4.0"
  schema-nest-cli:
    docker:
      - image: timoreymann/schemanest-cli:v0.7.33

jobs:
  integration-test-win:
    executor:
      name: win/default
      size: medium
    steps:
      - checkout
      - run:
          name: Show system info
          command: systeminfo /fo csv | ConvertFrom-Csv | select OS*, System*, Hotfix* | Format-List
      - run:
          name: Install python and poetry
          command: |
            choco install python -y --version=3.12.1
            pip install pipx
            pipx install poetry
            pipx ensurepath
      - run:
          name: Install packages
          command: C:\Users\circleci\.local\bin\poetry.exe install --all-extras
      - run:
          name: Run tests
          command: |
            C:\Users\circleci\.local\bin\poetry.exe run pytest --capture=no integration_tests/
  integration-test-macos:
    executor: macos
    steps:
      - checkout
      - run:
          name: Show system info
          command: uname -a
      - run:
          name: Install python and poetry
          command: |
            brew install python@3.12
            pip install pipx
            pipx install poetry
            pipx ensurepath
      - python/install-packages:
          pkg-manager: poetry
          args: --all-extras
      - run:
          name: Run tests
          command: |
            poetry run pytest --capture=no integration_tests/
  integration-test-linux:
    executor: python-linux
    steps:
      - checkout
      - run:
          name: Show system info
          command: uname -a
      - python/install-packages:
          pkg-manager: poetry
          args: --all-extras
      - run:
          name: Run tests
          command: |
            poetry run pytest --capture=no integration_tests/
  unit-test:
    executor: python-linux
    steps:
      - checkout
      - run:
          name: Show system info
          command: uname -a
      - python/install-packages:
          pkg-manager: poetry
          args: --all-extras
      - run:
          name: Run tests
          command: |
            poetry run coverage run -m pytest --junit-xml test-results/junit.xml --capture=no binary_wheel_builder/
            poetry run coverage report
            poetry run coverage html
            poetry run coverage xml -i
      - store_artifacts:
          path: htmlcov
      - store_test_results:
          path: test-results
      - codecov/upload
  build-gh-pages:
    executor: node
    steps:
      - checkout
      - run:
          name: Checkout pydoctor-theme submodule
          command: |
            git submodule sync
            git submodule update --init --recursive
      - python/install-packages:
          pkg-manager: poetry
          args: --all-extras
      - run:
          name: Build html documentation
          command: |
            poetry run pydoctor

      - github-utils/publish_github_pages:
          folder: gh-pages/
          git_commit_author_email: "no-reply@timo-reymann.de"
          git_commit_author_name: "CircleCI"
  pip-publish:
    executor: python-linux
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
          args: --all-extras
      - run:
          name: Publish package
          command: |
            poetry publish \
              --build \
              --username "$TWINE_USERNAME" \
              --password "$TWINE_PASSWORD"
  upload-schema:
    executor: schema-nest-cli
    steps:
      - checkout
      - run:
          name: Upload to Schemanest
          command: |
            schema-nest-cli upload-json-schema \
              --base-url https://schema-nest.timo-reymann.de \
              --api-key "$SCHEMA_NEST_UPLOAD_KEY" \
              --version "$CIRCLE_TAG" \
              --path wheel.schema.json \
              --identifier python-binary-wheel-builder
workflows:
  main:
    jobs:
      - build-gh-pages:
          filters:
            branches:
              only:
                - main
          requires:
            - unit-test
            - integration-test-win
            - integration-test-linux
            - integration-test-macos
      - integration-test-win:
          requires:
            - unit-test
      - integration-test-macos:
          requires:
            - unit-test
      - integration-test-linux:
          requires:
            - unit-test
      - unit-test
      - pip-publish:
          name: publish-pypi
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - upload-schema:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - semantic-release/with_existing_config:
          name: semantic-release
          additional_packages: "@google/semantic-release-replace-plugin"
          requires:
            - integration-test-win
            - integration-test-macos
            - integration-test-linux
          filters:
            branches:
              only:
                - main
